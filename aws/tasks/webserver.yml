- name: Webserver | Create Web Security Group
  ec2_group:
    name: "{{ item.sg_name }}"
    description: "{{ item.sg_description }}"
    region: "{{ aws_region }}"
    aws_access_key:   "{{ aws_access_key }}"
    aws_secret_key:   "{{ aws_secret_key }}"
    vpc_id: "{{ vpc_id }}" # vpc is the resgister name, you can also set it manually
    state: present
    rules: "{{ item.sg_rules }}"
  with_items: "{{ web_security_groups }}"
  register: web_sg

- name: Webserver | Tag the Web security group with a name
  ec2_tag:
    resource: "{{ item.group_id }}"
    region: "{{ aws_region }}"
    aws_access_key:   "{{ aws_access_key }}"
    aws_secret_key:   "{{ aws_secret_key }}"
    state: present
    tags:
      Name: "{{ vpc_name }}-{{ item.item.sg_name }}"
  with_items: "{{ web_sg.results }}"


- name: Create ec2 instance
  ec2:
    key_name: "{{ key_name }}"
    region: "{{ aws_region }}"
    aws_access_key:   "{{ aws_access_key }}"
    aws_secret_key:   "{{ aws_secret_key }}"
    instance_type: "{{ web_instance_type }}"
    image: "{{ ami_id }}"
    wait: yes
    group: "{{ web_security_groups[0].sg_name }}"
    count: 1
    vpc_subnet_id: "{{ public_subnet_id }}"
    assign_public_ip: yes
    # user_data: |
    #   yum update
    #   amazon-linux-extras install nginx1.12
    #instance_profile_name: "{{ s3role_name }}"
    instance_tags:
      Name: "{{ vpc_name }}_WEB_Instance"
      #Environment: "{{ ENV }}"
      #Role: "{{ server_role }}"
      #Application: "{{ application }}"
  register: web

- name: Set instance facts
  set_fact:
    instance_public_ip: "{{ web.instances[0].public_ip }}"
    instance_id: "{{ web.instances[0].id }}"
    
- name: Add newly created EC2 instance to the local host group
  lineinfile:
    dest: "./hosts"
    regexp: "{{ instance_public_ip }}"
    insertafter: "[webserver]"
    line: "{{ instance_public_ip }}"

# - raw: test -f /var/lib/cloud/instance/boot-finished
#   retries: 20
#   register: cmd_res
#   changed_when: false
#   until: cmd_res | success

- name: WebServer | Wait for SSH to come up
  wait_for:  
    host: "{{ instance_public_ip }}" 
    port: 22 
    state: started

# - name: "Wait for cloud init on first boot"
#   pause: 
#     minutes: 2

  
- name: Create SSH Group to login dynamically to EC2 Instance(s)
  add_host: 
    hostname: "{{ instance_public_ip }}"
    groupname: webserver
  